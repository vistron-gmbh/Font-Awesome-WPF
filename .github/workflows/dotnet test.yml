name: dotnet test

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
      - main
  pull_request:

env:
  # We do not need these actually. But its here to remember that is can be done
  SOLUTION_FILE_NAME: ${{ github.event.repository.name }}
  # Filter for testclasses e.g. --filter ClassName~File .Leave empty if no filter needed. Sadly I could never get it to work. Msbuild just would not accept the expanded env variable for some reason. Filters need to be added in two places for the last two runs.
  #DOT_NET_TEST_FILTER: --filter ClassName~File


jobs:
  test:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: MSBuild restore
      run: msbuild /verbosity:minimal /p:Configuration="Release" /p:Platform="Any CPU" /t:restore
    - name: MSBuild compile
      run: msbuild /verbosity:minimal /p:Configuration="Release" /p:Platform="Any CPU"
    - name: dotnet list all tests
      run: dotnet test -c Release --no-build -t -v n
    - name: dotnet list filtered tests
      run: dotnet test -c Release --no-build -t -v n
    - name: dotnet execute tests
      run: dotnet test -c Release --no-build -v n
